// Code generated by protoc-gen-go.
// source: post.proto
// DO NOT EDIT!

/*
Package post is a generated protocol buffer package.

It is generated from these files:
	post.proto

It has these top-level messages:
	PostRequest
	PostReply
*/
package post

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name.
type PostRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *PostRequest) Reset()                    { *m = PostRequest{} }
func (m *PostRequest) String() string            { return proto.CompactTextString(m) }
func (*PostRequest) ProtoMessage()               {}
func (*PostRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PostRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The response message containing the greetings
type PostReply struct {
	Postid  int32             `protobuf:"varint,1,opt,name=postid" json:"postid,omitempty"`
	Message []*PostReply_Post `protobuf:"bytes,2,rep,name=message" json:"message,omitempty"`
}

func (m *PostReply) Reset()                    { *m = PostReply{} }
func (m *PostReply) String() string            { return proto.CompactTextString(m) }
func (*PostReply) ProtoMessage()               {}
func (*PostReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PostReply) GetPostid() int32 {
	if m != nil {
		return m.Postid
	}
	return 0
}

func (m *PostReply) GetMessage() []*PostReply_Post {
	if m != nil {
		return m.Message
	}
	return nil
}

type PostReply_Post struct {
	PostID    int32  `protobuf:"varint,1,opt,name=PostID,json=postID" json:"PostID,omitempty"`
	Content   string `protobuf:"bytes,2,opt,name=Content,json=content" json:"Content,omitempty"`
	Published string `protobuf:"bytes,3,opt,name=Published,json=published" json:"Published,omitempty"`
}

func (m *PostReply_Post) Reset()                    { *m = PostReply_Post{} }
func (m *PostReply_Post) String() string            { return proto.CompactTextString(m) }
func (*PostReply_Post) ProtoMessage()               {}
func (*PostReply_Post) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *PostReply_Post) GetPostID() int32 {
	if m != nil {
		return m.PostID
	}
	return 0
}

func (m *PostReply_Post) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *PostReply_Post) GetPublished() string {
	if m != nil {
		return m.Published
	}
	return ""
}

func init() {
	proto.RegisterType((*PostRequest)(nil), "post.PostRequest")
	proto.RegisterType((*PostReply)(nil), "post.PostReply")
	proto.RegisterType((*PostReply_Post)(nil), "post.PostReply.Post")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Greeter service

type GreeterClient interface {
	// Sends a greeting
	GetPosts(ctx context.Context, in *PostRequest, opts ...grpc.CallOption) (*PostReply, error)
}

type greeterClient struct {
	cc *grpc.ClientConn
}

func NewGreeterClient(cc *grpc.ClientConn) GreeterClient {
	return &greeterClient{cc}
}

func (c *greeterClient) GetPosts(ctx context.Context, in *PostRequest, opts ...grpc.CallOption) (*PostReply, error) {
	out := new(PostReply)
	err := grpc.Invoke(ctx, "/post.Greeter/GetPosts", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Greeter service

type GreeterServer interface {
	// Sends a greeting
	GetPosts(context.Context, *PostRequest) (*PostReply, error)
}

func RegisterGreeterServer(s *grpc.Server, srv GreeterServer) {
	s.RegisterService(&_Greeter_serviceDesc, srv)
}

func _Greeter_GetPosts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetPosts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/post.Greeter/GetPosts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetPosts(ctx, req.(*PostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Greeter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "post.Greeter",
	HandlerType: (*GreeterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPosts",
			Handler:    _Greeter_GetPosts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "post.proto",
}

func init() { proto.RegisterFile("post.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 218 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0xc8, 0x2f, 0x2e,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xb1, 0x95, 0x14, 0xb9, 0xb8, 0x03, 0xf2,
	0x8b, 0x4b, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x84, 0xb8, 0x58, 0xf2, 0x12, 0x73,
	0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0xa5, 0xd5, 0x8c, 0x5c, 0x9c, 0x10,
	0x35, 0x05, 0x39, 0x95, 0x42, 0x62, 0x5c, 0x6c, 0x20, 0x8d, 0x99, 0x29, 0x60, 0x35, 0xac, 0x41,
	0x50, 0x9e, 0x90, 0x1e, 0x17, 0x7b, 0x6e, 0x6a, 0x71, 0x71, 0x62, 0x7a, 0xaa, 0x04, 0x93, 0x02,
	0xb3, 0x06, 0xb7, 0x91, 0x88, 0x1e, 0xd8, 0x32, 0xb8, 0x4e, 0x08, 0x0b, 0xa6, 0x48, 0x2a, 0x8c,
	0x8b, 0x05, 0x24, 0x00, 0x32, 0x0f, 0x44, 0x7b, 0xba, 0x20, 0x9b, 0xe7, 0xe9, 0x22, 0x24, 0xc1,
	0xc5, 0xee, 0x9c, 0x9f, 0x57, 0x92, 0x9a, 0x57, 0x22, 0xc1, 0x04, 0x76, 0x0c, 0x7b, 0x32, 0x84,
	0x2b, 0x24, 0xc3, 0xc5, 0x19, 0x50, 0x9a, 0x94, 0x93, 0x59, 0x9c, 0x91, 0x9a, 0x22, 0xc1, 0x0c,
	0x96, 0xe3, 0x2c, 0x80, 0x09, 0x18, 0x59, 0x73, 0xb1, 0xbb, 0x17, 0xa5, 0xa6, 0x96, 0xa4, 0x16,
	0x09, 0x19, 0x70, 0x71, 0xb8, 0xa7, 0x96, 0x80, 0x4c, 0x2f, 0x16, 0x12, 0x44, 0x76, 0x0d, 0xd8,
	0xaf, 0x52, 0xfc, 0x68, 0x0e, 0x54, 0x62, 0x48, 0x62, 0x03, 0x07, 0x8d, 0x31, 0x20, 0x00, 0x00,
	0xff, 0xff, 0x15, 0x7d, 0x0f, 0xf6, 0x28, 0x01, 0x00, 0x00,
}
